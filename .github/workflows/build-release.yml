name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          draft: false
          prerelease: false
          generate_release_notes: true

  build-android:
    name: Build Android
    needs: create-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Java
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'
          cache: 'gradle'

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Install dependencies
        run: flutter pub get

      - name: Build APK (unsigned)
        run: flutter build apk --release --split-per-abi

      - name: Build App Bundle (unsigned)
        run: flutter build appbundle --release

      - name: Rename APK files
        run: |
          cd build/app/outputs/flutter-apk
          mv app-armeabi-v7a-release.apk kelivo-armeabi-v7a-release.apk || true
          mv app-arm64-v8a-release.apk kelivo-arm64-v8a-release.apk || true
          mv app-x86_64-release.apk kelivo-x86_64-release.apk || true
          ls -lh

      - name: Rename AAB file
        run: |
          cd build/app/outputs/bundle/release
          mv app-release.aab kelivo-release.aab || true
          ls -lh

      - name: Upload APKs to Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            build/app/outputs/flutter-apk/kelivo-*.apk
            build/app/outputs/bundle/release/kelivo-release.aab

  build-windows:
    name: Build Windows
    needs: create-release
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: 'stable'
          cache: true

      - name: Flutter doctor
        run: flutter doctor -v

      - name: Enable Windows Desktop
        run: flutter config --enable-windows-desktop

      - name: Install dependencies
        run: flutter pub get

      - name: Remove problematic Windows plugins
        shell: pwsh
        run: |
          Write-Host "Removing flutter_tts from pubspec.yaml for Windows build..."
          $content = Get-Content pubspec.yaml -Raw
          # Comment out flutter_tts line
          $content = $content -replace '(\s+flutter_tts:.*)', '  # $1  # Disabled for Windows build'
          Set-Content pubspec.yaml $content
          
          Write-Host "Running flutter pub get again..."
          flutter pub get

      - name: Build Windows app
        run: flutter build windows --release

      - name: Create portable package
        shell: pwsh
        run: |
          Write-Host "Creating Windows portable package..."
          
          # Find the build output directory
          $buildPath = "build\windows\x64\runner\Release"
          
          if (-not (Test-Path $buildPath)) {
            Write-Host "Build path not found: $buildPath"
            Write-Host "Searching for build output..."
            Get-ChildItem -Path "build\windows" -Recurse -Filter "*.exe" | ForEach-Object {
              Write-Host "Found: $($_.FullName)"
            }
            throw "Build output not found!"
          }
          
          Write-Host "Build path found: $buildPath"
          Write-Host "Contents:"
          Get-ChildItem -Path $buildPath | ForEach-Object {
            Write-Host "  $($_.Name)"
          }
          
          # Create output directory
          $outputDir = "kelivo-windows-x64"
          New-Item -ItemType Directory -Force -Path $outputDir | Out-Null
          
          # Copy all files
          Write-Host "Copying files to $outputDir..."
          Copy-Item -Path "$buildPath\*" -Destination $outputDir -Recurse -Force
          
          # Verify exe exists
          $exeFile = Get-ChildItem -Path $outputDir -Filter "*.exe" | Select-Object -First 1
          if (-not $exeFile) {
            throw "No executable file found in output directory!"
          }
          Write-Host "Executable found: $($exeFile.Name)"
          
          # Create zip archive
          Write-Host "Creating zip archive..."
          Compress-Archive -Path $outputDir -DestinationPath "kelivo-windows-x64.zip" -Force
          
          $zipSize = (Get-Item "kelivo-windows-x64.zip").Length / 1MB
          Write-Host "Created kelivo-windows-x64.zip (${zipSize:N2} MB)"
          
          if ($zipSize -lt 5) {
            Write-Warning "Warning: Zip file seems small (${zipSize:N2} MB)"
          }

      - name: Upload Windows build to Release
        uses: softprops/action-gh-release@v2
        with:
          files: kelivo-windows-x64.zip
